{"version":3,"sources":["../src/index.js"],"names":["marksy","options","tracker","tree","elements","nextElementId","toc","currentIdLevel","currentId","renderer","code","language","elementId","components","Object","keys","map","key","mockedReact","tag","props","componentProps","indexOf","assign","context","children","createElement","Function","push","e","compile","content","markedOptions","smartypants"],"mappings":";;;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;AAEO,SAASA,MAAT,GAA8B;AAAA,MAAdC,OAAc,uEAAJ,EAAI;AACnC,MAAMC,OAAO,GAAG;AACdC,IAAAA,IAAI,EAAE,IADQ;AAEdC,IAAAA,QAAQ,EAAE,IAFI;AAGdC,IAAAA,aAAa,EAAE,IAHD;AAIdC,IAAAA,GAAG,EAAE,IAJS;AAKdC,IAAAA,cAAc,EAAE,CALF;AAMdC,IAAAA,SAAS,EAAE;AANG,GAAhB;AAQA,MAAMC,QAAQ,GAAG,gCAAeP,OAAf,EAAwBD,OAAxB,EAAiC;AAChDS,IAAAA,IADgD,gBAC3CA,KAD2C,EACrCC,QADqC,EAC3B;AACnB,UAAIA,QAAQ,KAAK,QAAjB,EAA2B;AACzB,YAAI;AACF;AACA,cAAMC,SAAS,GAAGV,OAAO,CAACG,aAAR,EAAlB;AAEA,cAAMQ,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYd,OAAO,CAACY,UAApB,EAAgCG,GAAhC,CAAoC,UAAAC,GAAG;AAAA,mBAAIhB,OAAO,CAACY,UAAR,CAAmBI,GAAnB,CAAJ;AAAA,WAAvC,CAAnB;;AACA,cAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD,EAAkC;AAAA,gBAA5BC,KAA4B,uEAApB,EAAoB;AACpD,gBAAMC,cAAc,GAClBR,UAAU,CAACS,OAAX,CAAmBH,GAAnB,KAA2B,CAA3B,GACIL,MAAM,CAACS,MAAP,CAAcH,KAAK,IAAI,EAAvB,EAA2B;AACzB;AACAH,cAAAA,GAAG,EAAEf,OAAO,CAACG,aAAR,EAFoB;AAGzBmB,cAAAA,OAAO,EAAEtB,OAAO,CAACsB;AAHQ,aAA3B,CADJ,GAMIJ,KAPN;;AADoD,8CAAbK,QAAa;AAAbA,cAAAA,QAAa;AAAA;;AAUpD,mBAAOxB,OAAO,CAACyB,aAAR,CAAsBP,GAAtB,EAA2BE,cAA3B,EAA2CI,QAA3C,CAAP;AACD,WAXD;;AAaAvB,UAAAA,OAAO,CAACE,QAAR,CAAiBQ,SAAjB,IACE;AACA,qBAAIe,QAAJ,GAAa,GAAb,4BAAqBb,MAAM,CAACC,IAAP,CAAYd,OAAO,CAACY,UAApB,CAArB,qBAAgEH,KAAhE,oBACEQ,WADF,4BAEKL,UAFL,OAGK,IALP;AAOAX,UAAAA,OAAO,CAACC,IAAR,CAAayB,IAAb,CAAkB1B,OAAO,CAACE,QAAR,CAAiBQ,SAAjB,CAAlB;AAEA,6BAAYA,SAAZ;AACD,SA5BD,CA4BE,OAAOiB,CAAP,EAAU,CACV;AACD;;AACD,eAAO,IAAP;AACD;;AACD,aAAO,kCAAa3B,OAAb,EAAsBD,OAAtB,EAA+BS,KAA/B,EAAqCC,QAArC,CAAP;AACD;AArC+C,GAAjC,CAAjB;AAwCA,SAAO,SAASmB,OAAT,CAAiBC,OAAjB,EAA4D;AAAA,QAAlCC,aAAkC,uEAAlB,EAAkB;AAAA,QAAdR,OAAc,uEAAJ,EAAI;AACjEtB,IAAAA,OAAO,CAACC,IAAR,GAAe,EAAf;AACAD,IAAAA,OAAO,CAACE,QAAR,GAAmB,EAAnB;AACAF,IAAAA,OAAO,CAACI,GAAR,GAAc,EAAd;AACAJ,IAAAA,OAAO,CAACG,aAAR,GAAwB,CAAxB;AACAH,IAAAA,OAAO,CAACsB,OAAR,GAAkBA,OAAlB;AACAtB,IAAAA,OAAO,CAACM,SAAR,GAAoB,EAApB;AACA,4BAAOuB,OAAP,EAAgBjB,MAAM,CAACS,MAAP,CAAc;AAAEd,MAAAA,QAAQ,EAARA,QAAF;AAAYwB,MAAAA,WAAW,EAAE;AAAzB,KAAd,EAA+CD,aAA/C,CAAhB;AAEA,WAAO;AAAE7B,MAAAA,IAAI,EAAED,OAAO,CAACC,IAAhB;AAAsBG,MAAAA,GAAG,EAAEJ,OAAO,CAACI;AAAnC,KAAP;AACD,GAVD;AAWD;;AAEc,kBAASL,OAAT,EAAkB;AAC/B,SAAOD,MAAM,CAACC,OAAD,CAAb;AACD","sourcesContent":["import marked from 'marked';\nimport createRenderer, { codeRenderer } from './createRenderer';\n\nexport function marksy(options = {}) {\n  const tracker = {\n    tree: null,\n    elements: null,\n    nextElementId: null,\n    toc: null,\n    currentIdLevel: 0,\n    currentId: [],\n  };\n  const renderer = createRenderer(tracker, options, {\n    code(code, language) {\n      if (language === 'marksy') {\n        try {\n          // eslint-disable-next-line no-plusplus\n          const elementId = tracker.nextElementId++;\n\n          const components = Object.keys(options.components).map(key => options.components[key]);\n          const mockedReact = (tag, props = {}, ...children) => {\n            const componentProps =\n              components.indexOf(tag) >= 0\n                ? Object.assign(props || {}, {\n                    // eslint-disable-next-line no-plusplus\n                    key: tracker.nextElementId++,\n                    context: tracker.context,\n                  })\n                : props;\n\n            return options.createElement(tag, componentProps, children);\n          };\n\n          tracker.elements[elementId] =\n            // eslint-disable-next-line no-new-func\n            new Function('h', ...Object.keys(options.components), `return ${code}`)(\n              mockedReact,\n              ...components\n            ) || null;\n\n          tracker.tree.push(tracker.elements[elementId]);\n\n          return `{{${elementId}}}`;\n        } catch (e) {\n          //\n        }\n        return null;\n      }\n      return codeRenderer(tracker, options)(code, language);\n    },\n  });\n\n  return function compile(content, markedOptions = {}, context = {}) {\n    tracker.tree = [];\n    tracker.elements = {};\n    tracker.toc = [];\n    tracker.nextElementId = 0;\n    tracker.context = context;\n    tracker.currentId = [];\n    marked(content, Object.assign({ renderer, smartypants: true }, markedOptions));\n\n    return { tree: tracker.tree, toc: tracker.toc };\n  };\n}\n\nexport default function(options) {\n  return marksy(options);\n}\n"],"file":"index.js"}